@model PABP_Projekat_2.Extensions.PagedList<PABP_Projekat_2.Models.Employee>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
@{var dummy = Model.FirstOrDefault(); }
<table class="table table-responsive">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => dummy.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => dummy.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => dummy.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => dummy.TitleOfCourtesy)
            </th>
            <th>
                @Html.DisplayNameFor(model => dummy.BirthDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => dummy.HireDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => dummy.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => dummy.City)
            </th>
            <th>
                @Html.DisplayNameFor(model => dummy.Region)
            </th>
            <th>
                @Html.DisplayNameFor(model => dummy.PostalCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => dummy.Country)
            </th>
            <th>
                @Html.DisplayNameFor(model => dummy.HomePhone)
            </th>
            <th>
                @Html.DisplayNameFor(model => dummy.Extension)
            </th>
            <th>
                @Html.DisplayNameFor(model => dummy.ReportsToNavigation)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TitleOfCourtesy)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BirthDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HireDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Region)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PostalCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Country)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HomePhone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Extension)
                </td>
                <td>
                    @if (item.ReportsToNavigation?.FirstName is not null)
                    {
                        @Html.DisplayFor(modelItem => item.ReportsToNavigation.FirstName)
                    }

                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.EmployeeId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.EmployeeId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.EmployeeId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<ul class="pagination justify-content-center">
    @{
        string prevDisabled = Model.CurrentPage == 1 ? "disabled" : "";
        string nextDisabled = Model.LastPage == Model.CurrentPage ? "disabled" : "";
    }
    <li class="page-item @prevDisabled"><a class="page-link" a asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage - 1)">Previous</a></li>
    @if (string.IsNullOrEmpty(prevDisabled))
    {
        <li class="page-item"><a class="page-link" a asp-action="Index" asp-route-pageNumber="1">1</a></li>
    }
    @if (Model.CurrentPage - 1 > 1)
    {
        <li class="page-item disabled"><a class="page-link">...</a></li>
    }
    <li class="page-item active"><a class="page-link">@Model.CurrentPage<span class="sr-only">(current)</span></a></li>
    @if (Model.LastPage - Model.CurrentPage > 1)
    {
        <li class="page-item disabled"><a class="page-link">...</a></li>
    }
    @if (string.IsNullOrEmpty(nextDisabled))
    {
        <li class="page-item"><a class="page-link" a asp-action="Index" asp-route-pageNumber="@(Model.LastPage)">@Model.LastPage</a></li>
    }
    <li class="page-item @nextDisabled"><a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage + 1)">Next</a></li>
</ul>